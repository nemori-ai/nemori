[project]
name = "nemori"
version = "0.1.0"
description = "Episodic memory system for transforming raw user data into structured narrative episodes"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # LangChain core
    "langchain-core",
    # LangChain LLM providers
    "langchain-openai",
    "langchain-anthropic",
    "langchain-google-genai",
    # Environment and configuration
    "python-dotenv",
    "duckdb>=1.3.1",
    "sqlmodel>=0.0.24",
    "duckdb-engine>=0.17.0",
    "rank-bm25>=0.2.2",
    "nltk>=3.9.1",
    "psycopg2-binary>=2.9.10",
    "asyncpg>=0.30.0",
    "greenlet>=3.2.3",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "ruff",
]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["nemori*"]
exclude = ["tests*", "figures*", "playground*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
    "llm: marks tests that require LLM providers",
    "unit: marks tests as unit tests",
    "postgresql: marks tests that require PostgreSQL database",
]

[tool.black]
line-length = 120
target-version = ["py312"]
include = '\.pyi?$'
skip-string-normalization = false  # Use double quotes as default
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "Q",  # flake8-quotes
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.0.0",
    "ruff>=0.12.1",
]
playground = [
    "matplotlib",
    "numpy",
]
